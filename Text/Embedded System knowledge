码元：
一个码元就是一个脉冲信号，一个脉冲信号有可能携带1bit数据，也有可能携带2bit数据、4bit数据！
你发送一个脉冲信号，如果就可以携带4bit数据，肯定发送速率更快啊
！那么怎么实现一个脉冲信号就能携带多个bit数据呢？
就需要一定的技术了，比如设置模拟信号中信号的频率、相位、振幅啥的。
举个例子：
把振幅分成四种，低（00）、中（01）、高（10）、很高（11），
这样我发一个脉冲信号，它的振幅是低，那就说明发送的是00（也就是2bit），
它的振幅是中（01），发送的就是01（也就是2bit）……也就实现了一个脉冲信号，
携带2bit的功能…（举个不恰当的例子让大家理解而已，明白啥意思就行）
再说一次，一个码元就是一个脉冲信号！波特率指的就是1秒能发送多少个码元，也就是1秒能发送多少个脉冲信号！

一个码元能携带1bit数据，那么比特率 = 波特率！
一个码元能携带2bit数据，那么比特率 = 2倍的波特率！
一个码元能携4bit数据，那么比特率 =4倍的波特率！

23/12/2024

存在动态和静态两种创建任务方式，主要还是为了针对不同的使用场景。
任务初始化操作都是一样的，两者的区别在于：

静态：任务的任务控制块和任务栈空间由开发者在创建任务时提供；
动态：任务的任务控制块和任务栈空间是创建任务时自动从系统堆上分配。

静态创建方式具有以下优点：
任务控制块和任务栈所需内存空间由开发者指定，可以放置在指定的地址；
无需担心如何处理内存分配失败的情形 ；
可在不允许动态内存分配的应用程序中使用FreeRTOS。

缺点：
因为要传入TCB和STACK的内存起始，创建任务的API的参数更多；
静态分配的内存块名字固定在复用给不同对象时不便于区分；

动态方式具有如下优点：
创建对象时API参数较少，更加简洁；
开发者不用参与内存分配的过程；它的缺点是需要考虑内存分配失败后该怎么处理。
