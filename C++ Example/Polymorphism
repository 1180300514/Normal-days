EX1:

#include <iostream>
using namespace std;
class B
{
public:    
void B1(void)
{
 B2();
}

virtual void B2(void)
{
 cout << "Hello, B2" << endl;
}
    
};

class A:public B
{
public:
virtual void B2(void)
{
 cout << "Hello, A" << endl;
}

};

int main()
{
    A *pA=new A;
    pA->B1();
    cout << "Hello, world!" << endl;
        return 0;
}//这一段的重写没有overrride关键字为什么也能运行：override不是必须的关键字


EX2:

#include <iostream>

using namespace std;

class Animal{
    public:
        virtual void sound() const;
        Animal();
        virtual ~Animal();
};

void Animal::sound()const{
    cout << "Animal makes a sound" <<endl;
}

Animal::Animal(){
    cout << "Animal Created" << endl;
}

Animal::~Animal(){
    cout << "Animal destroyed" << endl;
}

class Dog : public Animal{
    public:
        void sound()const;
};

void Dog::sound()const{
    cout << "Dog barks" << endl;
}

class Cat : public Animal{
    public:
        void sound()const;
};

void Cat::sound() const{
    cout << "Cat meows" << endl;
}

int main(){
    Dog animal_1;
    animal_1.sound();
    Cat animal_2;
    animal_2.sound();
    Animal* aniptr;
    aniptr = &animal_1;
    aniptr->sound();
}



